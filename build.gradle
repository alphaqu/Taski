plugins {
    id 'java'

    // Publishing
    id 'maven-publish'
    id 'signing'
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
}

group 'dev.quantumfusion'
version '2.1.0'

java {
    withSourcesJar()
    withJavadocJar()
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.jetbrains:annotations:23.0.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

test {
    useJUnitPlatform()
}

// Publishing
nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}
publishing {
    repositories {
        maven {
            credentials {
                username = sonatypeUsername
                password = sonatypePassword
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                name = project.name
                description = 'Task Management Library.'
                url = 'https://github.com/TeamQuantumFusion/Taski'

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/TeamQuantumFusion/Taski.git'
                    developerConnection = 'scm:git:ssh://github.com:TeamQuantumFusion/Taski.git'
                    url = 'http://github.com/TeamQuantumFusion/Taski/tree/master'
                }
                developers {
                    developer {
                        id = 'notalpha'
                        name = 'Yan Chubikov'
                        email = 'yan.gyunashyan@gmail.com'
                    }
                }
            }
        }
    }
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    setRequired {
        gradle.taskGraph.allTasks.any {
            it.equals(PublishToMavenRepository)
        }
    }
    sign publishing.publications.mavenJava
    sign configurations.archives
}
